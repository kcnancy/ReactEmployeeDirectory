{"version":3,"sources":["components/Header.js","components/EmpList.js","utils/API.js","components/SearchBar.js","components/MainTable.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","EmpList","props","src","image","alt","firstName","lastName","email","phone","date","dob","moment","format","randomUserApi","getEmployees","axios","get","SearchBar","value","search","name","type","placeholder","onChange","e","filterEmployees","MainTable","state","employees","filteredEmployees","filtered","componentDidMount","API","then","response","console","log","data","results","setState","catch","err","sortByFirstName","sortedEmployees","sort","a","b","first","sortByLastName","last","sortByDob","age","sortByEmail","target","filter","employee","toLowerCase","indexOf","this","scope","onClick","map","picture","medium","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.993e6aef.chunk.js","sourcesContent":["export const Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron   jumbotron-fluid\">\r\n        <h1>Employee Directory</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst formatDate = (date)=>{\r\n    return `${moment(date).format(\"MM-DD-YYYY\")? moment(date).format(\"MM-DD-YYYY\"):moment(date).format(\"MM-DD-YYYY\") }`;\r\n }\r\nfunction EmpList(props) {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          <img src={props.image} alt=\"user\"></img>\r\n        </td>\r\n        <td>{props.firstName}</td>\r\n        <td>{props.lastName}</td>\r\n        <td>{props.email}</td>\r\n        <td>{props.phone}</td>\r\n        <td>{formatDate(props.dob)}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\nexport default EmpList;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst randomUserApi = {\r\n\r\ngetEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\r\n  },\r\n};\r\nexport default randomUserApi;","import React from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n  return (\r\n    <form className=\"search\">\r\n      <div className= \"form-group\">\r\n        <input\r\n          value={props.search}\r\n          name=\"searchBar\"\r\n          type=\"text\"\r\n          className=\"form=control\"\r\n          placeholder=\"Search by First, Last or email\"\r\n          onChange={(e) => props.filterEmployees(e)}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport EmpList from \"./EmpList\";\r\nimport API from \"../utils/API\";\r\nimport SearchBar from \"./SearchBar\";\r\nclass MainTable extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    filtered: false,\r\n  };\r\n  //using lifecycle hook , commonly used when making api calls within class components\r\n  componentDidMount = () => {\r\n    API.getEmployees()\r\n      .then((response) => {\r\n        console.log(response.data.results);\r\n        this.setState({ employees: response.data.results });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //sort functions\r\n  sortByFirstName = () => {\r\n    const sortedEmployees = this.state.employees;\r\n    sortedEmployees.sort((a, b) => (a.name.first > b.name.first ? 1 : -1));\r\n    this.setState({ employees: sortedEmployees, filtered: false });\r\n  };\r\n  sortByLastName = () => {\r\n    const sortedEmployees = this.state.employees;\r\n    sortedEmployees.sort((a, b) => (a.name.last > b.name.last ? 1 : -1));\r\n    this.setState({ employees: sortedEmployees, filtered: false });\r\n  };\r\n\r\n  sortByDob = () => {\r\n    const sortedEmployees = this.state.employees;\r\n    sortedEmployees.sort((a, b) => b.dob.age - a.dob.age);\r\n    this.setState({ employees: sortedEmployees });\r\n  };\r\n\r\n  sortByEmail = () => {\r\n    const sortedEmployees = this.state.employees;\r\n    sortedEmployees.sort((a, b) => (a.email > b.email ? 1 : -1));\r\n    this.setState({ employees: sortedEmployees, filtered: false });\r\n  };\r\n\r\n  //filter functions for search bar\r\n  filterEmployees = (e) => {\r\n    const { employees, search } = this.state;\r\n    this.setState({ search: e.target.value });\r\n\r\n    const filteredEmployees = employees.filter(\r\n      (employee) =>\r\n        employee.name.first.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        employee.name.last.toLowerCase().indexOf(search.toLowerCase()) > -1 ||\r\n        employee.email.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({ filteredEmployees: filteredEmployees, filtered: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBar\r\n          filterEmployees={this.filterEmployees}\r\n          search={this.state.search}\r\n        />\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Image</th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"dropdown-toggle\"\r\n                onClick={this.sortByFirstName}\r\n              >\r\n                FirstName\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"dropdown-toggle\"\r\n                onClick={this.sortByLastName}\r\n              >\r\n                LastName\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"dropdown-toggle\"\r\n                onClick={this.sortByEmail}\r\n              >\r\n                Email\r\n              </th>\r\n              <th scope=\"col\">Phone number</th>\r\n              <th\r\n                scope=\"col\"\r\n                className=\"dropdown-toggle\"\r\n                onClick={this.sortByDob}\r\n              >\r\n                DOB\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              //render employees array if this.state.filtered is false\r\n              !this.state.filtered\r\n                ? this.state.employees.map((employee) => (\r\n                    <EmpList\r\n                      key={employee.phone}\r\n                      image={employee.picture.medium}\r\n                      firstName={employee.name.first}\r\n                      lastName={employee.name.last}\r\n                      email={employee.email}\r\n                      phone={employee.phone}\r\n                      dob={employee.dob.date}\r\n                    />\r\n                  ))\r\n                : //render filteredEmployees array if this.state.filtered is true\r\n                  this.state.filteredEmployees.map((employee) => (\r\n                    <EmpList\r\n                      key={employee.phone}\r\n                      image={employee.picture.medium}\r\n                      firstName={employee.name.first}\r\n                      lastName={employee.name.last}\r\n                      email={employee.email}\r\n                      phone={employee.phone}\r\n                      dob={employee.dob.date}\r\n                    />\r\n                  ))\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainTable;\r\n","import Header from \"./components/Header\";\nimport MainTable from \"./components/MainTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainTable />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\"\n\nReactDOM.render(\n   <React.StrictMode>\n     <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n );\n reportWebVitals();\n\n"],"sourceRoot":""}